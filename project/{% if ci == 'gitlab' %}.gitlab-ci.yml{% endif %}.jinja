variables:
  UV_VERSION: "0.7.12"  # uv version
  PYTHON_VERSION: "3.13"  # basic Python version
  BASE_LAYER: "bookworm-slim"  # uv base image
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"  # cache directory

stages:
  - lint
  - test
  - release

# Lint job
lint:
  stage: lint
  parallel:
    matrix:
      - PYTHON_VERSION: "3.12"
      - PYTHON_VERSION: "3.13"
  image: ghcr.io/astral-sh/uv:$UV_VERSION-python$PYTHON_VERSION-$BASE_LAYER
  tags:
    - $OS
  script:
    - echo "Using UV version $UV_VERSION with Python $PYTHON_VERSION"
    - echo "Installing project dependencies"
    - uv sync --group dev --group docs --extra cpu
    - echo "Running format checks"
    - uv run ruff format
    - echo "Running lint checks"
    - uv run ruff check --fix --exit-non-zero-on-fix .
  cache:
    paths:
      - .cache/pip/

# Test job
test:
  stage: test
  needs:
    - lint
  parallel:
    matrix:
      - PYTHON_VERSION: "3.12"
      - PYTHON_VERSION: "3.13"
  image: ghcr.io/astral-sh/uv:$UV_VERSION-python$PYTHON_VERSION-$BASE_LAYER
  tags:
    - $OS
  script:
    - echo "Using UV version $UV_VERSION with Python $PYTHON_VERSION"
    - echo "Installing project dependencies"
    - uv sync --group dev --group docs --extra cpu
    - echo "Running tests"
    - uv run coverage run -m pytest tests/
  cache:
    paths:
      - .cache/pip/

release:
  stage: release
  # Run when specific tag was pushed
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'  # Run tags matched with 'v*.*.*'
    - when: manual  # 수동 실행도 허용
  script:
    - echo "Checking permissions for release..."
    # Like GitHub's actions-check-permissions
    - if [ -z "$CI_JOB_TOKEN" ]; then echo "No CI_JOB_TOKEN available, exiting"; exit 1; fi

    - echo "Setting up Git configuration..."
    - git config --global user.name "$CI_COMMIT_AUTHOR_NAME"
    - git config --global user.email "$CI_COMMIT_AUTHOR_EMAIL"

    - echo "Fetching tags..."
    - git fetch --tags

    - echo "Creating release for tag $CI_COMMIT_TAG..."
    # Create GitLab Release
    - >
      curl --header "PRIVATE-TOKEN: $CI_JOB_TOKEN"
      --data "name=Release $CI_COMMIT_TAG&tag_name=$CI_COMMIT_TAG&description=$(cat RELEASE.md)"
      "$CI_API_V4_URL/projects/$CI_PROJECT_ID/releases"

  tags:
    - release-runner  # GitLab runner tag
